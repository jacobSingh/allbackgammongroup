#!/bin/bash

get_last_date() {
  file=$1
  headers="$(head -n1 $file| tr -d '\r')"
  data="$(tail -n1 $file| tr -d '\r')"

  buff="${headers}
  ${data}"

  tfile=`mktemp`
  echo "$buff" > $tfile

cmd="
import pandas as pd
import numpy as np
import dateutil

df = pd.read_csv('$tfile')
print(df['match-completed-at'].iloc[0])
"

  echo "$cmd" | python
}


if [ -z $1 ]; then
  echo "Provide a data output directory"
  exit 2
fi

master_file="$1/../all_abg_log.csv"
if [ $(ls "$master_file") ]; then
  # @TODO: Make this less hacky... could probably use mtime of the file, or at least pandas and parse the CSV properly
  start_date=`get_last_date $master_file`
  ./abg_challonge.py -c ../abg.ini -d"$start_date" -o "$master_file" rip &&
    ./abg_stats.py -m "../player_map.csv" -e"Champion and Challenger" $1 < $1/../all_abg_log.csv
else
  ./abg_challonge.py -c ../abg.ini -o "$master_file" rip && ./abg_stats.py -m
  '../player_map.csv' -e"Champion and Challenger" $1 < $1/../all_abg_log.csv
fi
